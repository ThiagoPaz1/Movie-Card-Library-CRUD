{"ast":null,"code":"var _jsxFileName = \"/home/thiagopaz/\\xC1rea de Trabalho/Trybe/Projetos_pessoais/Trybe/sd-010-b-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { MovieForm, Loading } from '../components';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async updatedMovie => {\n      const {\n        updateMovie\n      } = movieAPI;\n      await updateMovie(updatedMovie);\n      this.setState({\n        shouldRedirect: true\n      });\n    };\n\n    this.updateActualMovie = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const {\n        getMovie\n      } = movieAPI;\n      const response = await getMovie(id);\n      this.setState({\n        movie: response,\n        status: ''\n      });\n    };\n\n    this.state = {\n      movie: {},\n      status: 'loading',\n      shouldRedirect: false\n    };\n  }\n\n  componentDidMount() {\n    this.updateActualMovie();\n  }\n\n  render() {\n    const {\n      status,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (status === 'loading') {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number\n    })\n  })\n}.isRequired;\nexport default EditMovie;","map":{"version":3,"sources":["/home/thiagopaz/Área de Trabalho/Trybe/Projetos_pessoais/Trybe/sd-010-b-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","PropTypes","Redirect","movieAPI","MovieForm","Loading","EditMovie","constructor","props","handleSubmit","updatedMovie","updateMovie","setState","shouldRedirect","updateActualMovie","match","params","id","getMovie","response","movie","status","state","componentDidMount","render","propTypes","shape","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AAEA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAChCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,YAdmB,GAcJ,MAAOC,YAAP,IAAwB;AACrC,YAAM;AAAEC,QAAAA;AAAF,UAAkBR,QAAxB;AACA,YAAMQ,WAAW,CAACD,YAAD,CAAjB;AAEA,WAAKE,QAAL,CAAc;AACZC,QAAAA,cAAc,EAAE;AADJ,OAAd;AAGD,KArBkB;;AAAA,SAuBnBC,iBAvBmB,GAuBC,YAAY;AAC9B,YAAM;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAEC,YAAAA;AAAF;AAAV;AAAT,UAAgC,KAAKT,KAA3C;AACA,YAAM;AAAEU,QAAAA;AAAF,UAAef,QAArB;AAEA,YAAMgB,QAAQ,GAAG,MAAMD,QAAQ,CAACD,EAAD,CAA/B;AAEA,WAAKL,QAAL,CAAc;AACZQ,QAAAA,KAAK,EAAED,QADK;AAEZE,QAAAA,MAAM,EAAE;AAFI,OAAd;AAID,KAjCkB;;AAGjB,SAAKC,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,MAAM,EAAE,SAFG;AAGXR,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKD;;AAEDU,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,iBAAL;AACD;;AAuBDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,MAAF;AAAUR,MAAAA,cAAV;AAA0BO,MAAAA;AAA1B,QAAoC,KAAKE,KAA/C;;AAEA,QAAIT,cAAJ,EAAoB;AAClB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAIQ,MAAM,KAAK,SAAf,EAA0B;AACxB,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAGD,KAAnB;AAA2B,MAAA,QAAQ,EAAG,KAAKX,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AApD+B;;AAuDlCH,SAAS,CAACmB,SAAV,GAAsB;AACpBV,EAAAA,KAAK,EAAEd,SAAS,CAACyB,KAAV,CAAgB;AACrBV,IAAAA,MAAM,EAAEf,SAAS,CAACyB,KAAV,CAAgB;AACtBT,MAAAA,EAAE,EAAEhB,SAAS,CAAC0B;AADQ,KAAhB;AADa,GAAhB;AADa,EAMpBC,UANF;AAQA,eAAetB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nimport * as movieAPI from '../services/movieAPI';\n\nimport { MovieForm, Loading } from '../components';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movie: {},\n      status: 'loading',\n      shouldRedirect: false,\n    };\n  }\n\n  componentDidMount() {\n    this.updateActualMovie();\n  }\n\n  handleSubmit = async (updatedMovie) => {\n    const { updateMovie } = movieAPI;\n    await updateMovie(updatedMovie);\n\n    this.setState({\n      shouldRedirect: true,\n    });\n  }\n\n  updateActualMovie = async () => {\n    const { match: { params: { id } } } = this.props;\n    const { getMovie } = movieAPI;\n\n    const response = await getMovie(id);\n\n    this.setState({\n      movie: response,\n      status: '',\n    });\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n\n    if (shouldRedirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number,\n    }),\n  }),\n}.isRequired;\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}