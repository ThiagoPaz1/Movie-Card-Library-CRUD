{"ast":null,"code":"var _jsxFileName = \"/home/thiagopaz/\\xC1rea de Trabalho/Trybe/Projetos_pessoais/Trybe/sd-010-b-project-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n\n    this.reqMovieID = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const {\n        getMovie\n      } = movieAPI;\n      const response = await getMovie(id);\n      this.setState({\n        movie: response,\n        loading: false\n      });\n    };\n\n    this.deleteActualMovie = async () => {\n      const {\n        deleteMovie\n      } = movieAPI;\n      const {\n        movie: {\n          id\n        }\n      } = this.state;\n      deleteMovie(id);\n    };\n\n    this.state = {\n      movie: {},\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.reqMovieID();\n  }\n\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n    const {\n      movie,\n      loading\n    } = this.state;\n    const {\n      id,\n      title,\n      storyline,\n      imagePath,\n      genre,\n      rating,\n      subtitle\n    } = movie;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, `Title: ${title}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, `Rating: ${rating}`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-details-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/movies/${id}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"EDITAR\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.deleteActualMovie(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"DELETAR\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"VOLTAR\")))));\n  }\n\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number\n    })\n  })\n}.isRequired;\nexport default MovieDetails;","map":{"version":3,"sources":["/home/thiagopaz/Área de Trabalho/Trybe/Projetos_pessoais/Trybe/sd-010-b-project-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","Link","PropTypes","movieAPI","Loading","MovieDetails","constructor","reqMovieID","match","params","id","props","getMovie","response","setState","movie","loading","deleteActualMovie","deleteMovie","state","componentDidMount","render","title","storyline","imagePath","genre","rating","subtitle","propTypes","shape","number","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movie: {},\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.reqMovieID();\n  }\n\n  reqMovieID = async () => {\n    const { match: { params: { id } } } = this.props;\n    const { getMovie } = movieAPI;\n\n    const response = await getMovie(id);\n\n    this.setState({\n      movie: response,\n      loading: false,\n    });\n  }\n\n  deleteActualMovie = async () => {\n    const { deleteMovie } = movieAPI;\n    const { movie: { id } } = this.state;\n\n    deleteMovie(id);\n  }\n\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n    const { movie, loading } = this.state;\n    const { id, title, storyline, imagePath, genre, rating, subtitle } = movie;\n\n    return (\n      <div>\n        {loading ? <Loading /> : (\n          <div data-testid=\"movie-details\">\n            <img alt=\"Movie Cover\" src={ `../${imagePath}` } />\n            <p>{`Title: ${title}`}</p>\n            <p>{ `Subtitle: ${subtitle}` }</p>\n            <p>{ `Storyline: ${storyline}` }</p>\n            <p>{ `Genre: ${genre}` }</p>\n            <p>{ `Rating: ${rating}` }</p>\n\n            <div className=\"movie-details-buttons\">\n              <button type=\"button\">\n                <Link to={ `/movies/${id}/edit` }>EDITAR</Link>\n              </button>\n\n              <button type=\"button\" onClick={ () => this.deleteActualMovie() }>\n                <Link to=\"/\">DELETAR</Link>\n              </button>\n\n              <button type=\"button\">\n                <Link to=\"/\">VOLTAR</Link>\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number,\n    }),\n  }),\n}.isRequired;\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}